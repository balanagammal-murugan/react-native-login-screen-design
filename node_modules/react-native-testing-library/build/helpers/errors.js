var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.createQueryByError=exports.prepareErrorMessage=exports.logDeprecationWarning=exports.createLibraryNotSupportedError=exports.ErrorWithStack=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));var _wrapNativeSuper2=_interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));var ErrorWithStack=function(_Error){(0,_inherits2.default)(ErrorWithStack,_Error);function ErrorWithStack(message,callsite){var _this;(0,_classCallCheck2.default)(this,ErrorWithStack);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(ErrorWithStack).call(this,message));if(Error.captureStackTrace){Error.captureStackTrace((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)),callsite);}return _this;}return ErrorWithStack;}((0,_wrapNativeSuper2.default)(Error));exports.ErrorWithStack=ErrorWithStack;var createLibraryNotSupportedError=function createLibraryNotSupportedError(error){return new Error("Currently the only supported library to search by text is \"react-native\".\n\n"+error.message);};exports.createLibraryNotSupportedError=createLibraryNotSupportedError;var warned={getByName:false,getAllByName:false,queryByName:false,queryAllByName:false};var logDeprecationWarning=function logDeprecationWarning(deprecatedFnName,alternativeFnName){if(warned[deprecatedFnName]){return;}console.warn("Deprecation Warning:\n\n  \""+deprecatedFnName+"\" is deprecated and will be removed in next major release. Please use \""+alternativeFnName+"\" instead.\n\n  Docs: https://github.com/callstack/react-native-testing-library#"+alternativeFnName.toLowerCase()+"-type-reactcomponenttype\n    ");warned[deprecatedFnName]=true;};exports.logDeprecationWarning=logDeprecationWarning;var prepareErrorMessage=function prepareErrorMessage(error){return error.message.replace(/ matching custom predicate[^]*/gm,'');};exports.prepareErrorMessage=prepareErrorMessage;var createQueryByError=function createQueryByError(error,callsite){if(error.message.includes('No instances found')){return null;}throw new ErrorWithStack(error.message,callsite);};exports.createQueryByError=createQueryByError;